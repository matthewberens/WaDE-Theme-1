mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
source("code/0-packages.R")
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("D" = "red", "P" = "yellow", "green")) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
source("code/0-packages.R")
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("D" = "red", "P" = "yellow", "green")) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("D" = "red", "P" = "yellow", "green")) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Grays"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("D" = "red", "P" = "yellow", "green")) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "yellow", "green")) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#ffb703", "#57cc99")) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
mapview(WaDE_sites, zcol = "network", layer.name = "Network", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(length(unique(WaDE_sites$network)), "Spectral")) +
mapview(EFPC_catchments, alpha.regions = 0, col.region = "gray", color = "black", legend = FALSE, lwd=1) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(nlcd_2019, col.regions = data, att = "Class", layer.name = "Landcover Class", label = FALSE, legend = TRUE, alpha = 0.5, hide = TRUE)
mapview(WaDE_sites, zcol = "network", layer.name = "Network", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(length(unique(WaDE_sites$network)), "Spectral")) +
mapview(EFPC_catchments, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(nlcd_2019, col.regions = data, att = "Class", layer.name = "Landcover Class", label = FALSE, legend = TRUE, alpha = 0.5, hide = TRUE)
map_Apr2023 <-
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
June2023_synoptic <- read.csv("processed/SYNOPTIC_2023-06-23.csv")
June2023_synoptic <- merge(June2023_synoptic, sites) %>%
st_as_sf()
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
library(leafsync)
sync(map_Apr2023, map_June2023)
map_Apr2023 | map_June2023
install.packages('leaflet.extras2')
map_Apr2023 | map_June2023
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) %>%
leaflet::removeLayersControl()+
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_Apr2023 | map_June2023
map_Apr2023 <-
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_Apr2023 | map_June2023
map_Apr2023 <-
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2)
#mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2)
#mapview(merged, alpha.regions = 0.2, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_Apr2023 | map_June2023
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_HUC, alpha.regions = 0, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_HUC, alpha.regions = 0, col.region = "lightgreen", color = "black", legend = FALSE, lwd=1)
map_Apr2023 | map_June2023
map_Apr2023 <-
mapview(subset(Apr2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(Apr2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(Apr2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_HUC, alpha.regions = 0, col.region = "lightgreen", color = "darkgreen", legend = FALSE, lwd=2)
```{r June 2023 Map, echo=FALSE, message=FALSE, warning=FALSE, include=TRUE}
map_June2023 <-
mapview(subset(June2023_synoptic, parameter == "depth"), layer.name = "Flow Status", zcol = "flow_status", alpha.region = 1, label = "site_name", col.regions = c("red", "#57cc99","#ffd60a" )) +
#mapview(subset(June2023_synoptic, parameter == "SO4"), layer.name = "Sulfate", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Reds"), hide = TRUE) +
mapview(subset(June2023_synoptic, parameter == "DOC"), layer.name = "DOC", zcol = "result_value", alpha.region = 1, label = "site_name", col.regions = RColorBrewer::brewer.pal(5, "Greys"), hide = TRUE) +
mapview(EFPC_fl, color = "blue", legend = FALSE, lwd = 1) +
mapview(EFPC_main, color = "blue", legend = FALSE, lwd = 2) +
mapview(EFPC_HUC, alpha.regions = 0, col.region = "lightgreen", color = "darkgreen", legend = FALSE, lwd=2)
map_Apr2023 | map_June2023
install.packages("slideview")
slideview::slideView(map_June2023, map_Apr2023)
#Load libraries and set directory
setwd("~/Documents/GitHub/Wade-Theme-1")
#load packages
source("code/0-packages.R")
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
#load packages
source("code/0-packages.R")
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
synoptic_sites <- read.csv("raw/WaDE SYNOPTIC_locations.csv")
View(synoptic_sites)
View(sampling_data)
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data$TIC = sampling_data$TC - sampling_data$DOC
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data$DIC = sampling_data$TC - sampling_data$DOC
# Step 3. Transform data and prepare for export -----------------------------------------
data_formatted <- merged_data %>%
pivot_longer(c("depth":"DIC"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION",
ifelse(parameter %in% c("Mg", "Ca", "Na", "K"), "CATION", ""))))),
sample_date = mdy(sample_date),
sample_time = hm(sample_time))
#Save formatted data as a .csv
write.csv(data_formatted, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
# Step 3. Transform data and prepare for export -----------------------------------------
data_formatted <- sampling_data %>%
pivot_longer(c("depth":"DIC"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION",
ifelse(parameter %in% c("Mg", "Ca", "Na", "K"), "CATION", ""))))),
sample_date = mdy(sample_date),
sample_time = hm(sample_time))
#Save formatted data as a .csv
write.csv(data_formatted, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documents/GitHub/WaDE-Theme-1")
source("code/0-packages.R")
EFPC_HUC <- st_set_crs(get_huc(id = "060102070302", buffer = 0.5, type = "huc12"), 4326)
EFPC_catchments <- st_set_crs(read_sf("GIS_data/EFPC Catchments.shp"), 4326)
EFPC_fl <- st_set_crs(read_sf("GIS_data/EFPC Flowlines.shp"), 4326)
EFPC_main <- st_set_crs(read_sf("GIS_data/East Fork Poplar Creek.shp"), 4326)
WaDE_sites <- read.csv("raw/WaDE SYNOPTIC_locations.csv") %>%
st_as_sf(coords = c('longitude', 'latitude')) %>%
st_set_crs(4326)
WaDE_sites <- st_intersection(WaDE_sites, EFPC_catchments)
#This block assigns the correct color scheme to the data based on the NLCD color legend.
nlcd_2019 <- raster::as.factor(nlcd_2019)
#This block assigns the correct color scheme to the data based on the NLCD color legend.
nlcd_2019 <- raster::as.factor(nlcd_2019)
nlcd_2019 <- FedData::get_nlcd(template = EFPC_HUC, label = "EFPC NLCD 2019", year = 2019)
#This block assigns the correct color scheme to the data based on the NLCD color legend.
nlcd_2019 <- raster::as.factor(nlcd_2019)
nlcd_2019@data@attributes[[1]] <- as.data.frame(nlcd_colors())
data <- nlcd_2019@data@attributes[[1]] %>%
dplyr::left_join(nlcd_colors()) %$%
Color
#This code calculates the zonal statistics for each of the EFPC catchments. The results are exported as a df that is saved as
landuse_fracs <- exact_extract(nlcd_2019, EFPC_catchments, fun = 'frac', force_df = TRUE)
#Assign the catchments their correct OBJECTID
landuse_fracs$OBJECTID <- EFPC_catchments$OBJECTID
merged <- merge(EFPC_catchments, landuse_fracs, by = "OBJECTID") %>%
dplyr::select(-c(NHDPlusID, SourceFC, GridCode, VPUID, SHAPE_Leng, SHAPE_Area)) %>%
mutate(Developed = frac_21 + frac_22 + frac_23 + frac_24,
Water = frac_11,
Forest = frac_41 + frac_42 + frac_43,
Shrub = frac_52,
Grassland = frac_71,
Pasture = frac_81,
Wetland = frac_90 + frac_95,
Herbaceous = frac_52 + frac_71 + frac_81)
sites <- st_intersection(merged, WaDE_sites)
View(sites)
June2023_synoptic <- merge(June2023_synoptic, sites)
June2023_synoptic <- read.csv("processed/SYNOPTIC_2023-06-23.csv")
June2023_synoptic <- merge(June2023_synoptic, sites)
View(June2023_synoptic)
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Developed, y = result_value))
June2023_synoptic %>%
subset(parameter == "DOC") %>%
ggplot() +
geom_point(aes(x = Developed, y = result_value))
June2023_synoptic %>%
subset(parameter == "TC") %>%
ggplot() +
geom_point(aes(x = Developed, y = result_value))
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Developed, y = result_value)) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Developed, y = result_value), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Developed, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Forested, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Forest, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DOC") %>%
ggplot() +
geom_point(aes(x = Forest, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Forest, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = Developed, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = frac_21, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = frac_22, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = frac_23, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = frac_24, y = result_value, fill = Developed), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = frac_24, y = result_value), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = frac_21, y = result_value), shape = 21) +
geom_point(aes(x = frac_22, y = result_value), shape = 21) +
geom_point(aes(x = frac_23, y = result_value), shape = 21) +
geom_point(aes(x = frac_24, y = result_value), shape = 21) +
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot() +
geom_point(aes(x = frac_21, y = result_value), shape = 21, fill = "#FFD0D0") +
geom_point(aes(x = frac_22, y = result_value), shape = 21, fill = "#FF8B8B") +
geom_point(aes(x = frac_23, y = result_value), shape = 21, fill = "#FF4545") +
geom_point(aes(x = frac_24, y = result_value), shape = 21, fill = "#FF0000") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE)) +
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE) +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#FFD0D0") +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE) +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE) +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE) +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#FFD0D0") +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#FF8B8B") +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#FF4545") +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "#FF0000") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#FFD0D0") +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#FF8B8B") +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#FF4545") +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "blue") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
```{r, message=FALSE, warning = FALSE}
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#FFD0D0") +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#FF8B8B") +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#FF4545") +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "blue") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#FFD0D0") +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#FF8B8B") +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#FF4545") +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "blue") +
labs(x = "Developed Land Cover (%)")
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#FFD0D0") +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#FF8B8B") +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#FF4545") +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "blue") +
labs(x = "Developed Land Cover (%)") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#FFD0D0") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#FFD0D0") +
geom_point(aes(x = frac_22), shape = 21, fill = "#FF8B8B") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#FF8B8B") +
geom_point(aes(x = frac_23), shape = 21, fill = "#FF4545") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#FF4545") +
geom_point(aes(x = frac_24), shape = 21, fill = "#FF0000") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "blue") +
labs(x = "Developed Land Cover (%)", y = "DIC (mg/L)") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#7678ed") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#7678ed") +
geom_point(aes(x = frac_22), shape = 21, fill = "#f7b801") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#f7b801") +
geom_point(aes(x = frac_23), shape = 21, fill = "#f18701") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#f18701") +
geom_point(aes(x = frac_24), shape = 21, fill = "#f35b04") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "#f35b04") +
labs(x = "Developed Land Cover (%)", y = "DIC (mg/L)") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#7678ed") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#7678ed") +
geom_point(aes(x = frac_22), shape = 21, fill = "#f7b801") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#f7b801") +
geom_point(aes(x = frac_23), shape = 21, fill = "#f18701") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#f18701") +
geom_point(aes(x = frac_24), shape = 21, fill = "#f35b04") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "#f35b04") +
geom_smooth(aes(x = Developed), method = lm, se = FALSE, color = "black") +
labs(x = "Developed Land Cover (%)", y = "DIC (mg/L)") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
June2023_synoptic %>%
subset(parameter == "DIC") %>%
ggplot(aes(y = result_value)) +
geom_point(aes(x = frac_21), shape = 21, fill = "#7678ed") +
geom_smooth(aes(x = frac_21), method = lm, se = FALSE, color = "#7678ed") +
geom_point(aes(x = frac_22), shape = 21, fill = "#f7b801") +
geom_smooth(aes(x = frac_22), method = lm, se = FALSE, color = "#f7b801") +
geom_point(aes(x = frac_23), shape = 21, fill = "#f18701") +
geom_smooth(aes(x = frac_23), method = lm, se = FALSE, color = "#f18701") +
geom_point(aes(x = frac_24), shape = 21, fill = "#f35b04") +
geom_smooth(aes(x = frac_24), method = lm, se = FALSE, color = "#f35b04") +
geom_smooth(aes(x = Developed), method = lm, se = FALSE, color = "black") +
labs(x = "Developed Land Cover (%)", y = "DIC (mg/L)") +
#FFD0D0, #FF8B8B, #FF4545, #FF0000
theme_mb1()
