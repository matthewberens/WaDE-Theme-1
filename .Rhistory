source("code/0-packages.R")
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data <- sampling_data %>%
mutate(sample_date = lubridate::mdy(sample_date),
sample_time = lubridate::hm(sample_time),
Year = lubridate::year(sample_date),
DOY = lubridate::yday(sample_date))
# Step 3. Set LODs  ---------------------------------------------------------------------
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
data_LOD <- merge(sampling_data, WaDE_ddl, by = "parameter")
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data <- sampling_data %>%
mutate(sample_date = lubridate::mdy(sample_date),
sample_time = lubridate::hm(sample_time),
Year = lubridate::year(sample_date),
DOY = lubridate::yday(sample_date))
sampling_data$DIC = sampling_data$TC - sampling_data$DOC
View(sampling_data)
# Step 5. Transform data and prepare for export -----------------------------------------
data_transform <- sampling_data %>%
pivot_longer(-c("site_name":"medium", "Year","DOY"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION",
ifelse(parameter %in% c("Mg", "Ca", "Na", "K", "Si"), "CATION", "METALS"))))))
View(data_transform)
# Step 5. Transform data and prepare for export -----------------------------------------
data_transform <- sampling_data %>%
pivot_longer(-c("site_name":"medium", "Year","DOY"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "TC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION", "METALS")))))
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
data_LOD <- merge(data_transform, WaDE_ddl, by = "parameter")
View(data_LOD)
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(result_value = ifelse(. < ddl, ddl/2, .))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(across(result_value), ~ ifelse(. < ddl, ddl/2, as.numeric(.)))
data_LOD <- data_LOD %>%
subset(~is.na(result+value)) %>%
mutate(across(result_value), ~ ifelse(. < ddl, ddl/2, as.numeric(.)))
data_LOD <- data_LOD %>%
subset(!is.na(result+value)) %>%
mutate(across(result_value), ~ ifelse(. < ddl, ddl/2, as.numeric(.)))
data_LOD <- data_LOD %>%
subset(!is.na(result_value)) %>%
mutate(across(result_value), ~ ifelse(. < ddl, ddl/2, as.numeric(.)))
mutate(across(result_value), ~ ifelse(. < ddl, ddl/2, .)
data_LOD <- data_LOD %>%
data_LOD <- data_LOD %>%
mutate(across(result_value), ~ ifelse(. < ddl, ddl/2, .))
data_LOD <- data_LOD %>%
mutate(across(result_value), ~ ifelse(. < "ddl", ddl/2, .))
data_LOD <- data_LOD %>%
mutate(result_value = ifelse(result_value < ddl, ddl/2, result_value))
data_LOD <- data_LOD %>%
mutate(result_value = ifelse(!is.na(result_value) < ddl, ddl/2, result_value))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- data_LOD %>%
mutate(result_value = ifelse(!is.na(result_value) < ddl, ddl/2, result_value))
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"),
result_LOD = ifelse(detection_FLAG == "<", ddl/2, result_value))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl | !is.na(result_value) < 0, "<", "NONE"),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter")
data_LOD <- data_LOD %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"))
-.7 < .1
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"))
!is.na(0.1)
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<",
is.na(result_value), "NA", "NONE"))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<",
is.na(result_value) == FALSE, "NA", "NONE"))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<",
is.na(result_value) == TRUE, "NA", "NONE"))
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(!is.na(result_value) < ddl, "<", "NONE"))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(result_value < ddl, "<", "NONE"))
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data <- sampling_data %>%
mutate(sample_date = lubridate::mdy(sample_date),
sample_time = lubridate::hm(sample_time),
Year = lubridate::year(sample_date),
DOY = lubridate::yday(sample_date))
data_LOD <- sampling_data %>%
mutate(across(c(DOC, TC), ~ ifelse(. < 0.1, 0.05, as.numeric(.))),
across(c(Mg, Ca), ~ ifelse(. < 0.5, 0.25, as.numeric(.))),
across(c(Cl, SO4, NO3, PO4), ~ ifelse(. < 0.1, 0.05, as.numeric(.))))
sampling_data$DIC = sampling_data$TC - sampling_data$DOC
# Step 5. Transform data and prepare for export -----------------------------------------
data_transform <- sampling_data %>%
pivot_longer(-c("site_name":"medium", "Year","DOY"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "TC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION", "METALS")))))
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(result_value < ddl, "<", "NONE"))
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(result_value < ddl, "<", "NONE"),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
#Save formatted data as a .csv
write.csv(data_formatted, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
#Save formatted data as a .csv
write.csv(data_LOD, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
#Load libraries and set directory
setwd("~/Documents/GitHub/Wade-Theme-1")
#load packages
source("code/0-packages.R")
# Step 2. Load Synoptic Data, if desired ----------------------------------------------------
synoptic_data <- read.csv("processed/SYNOPTIC_2023-06-23.csv")
geom_point(aes(x = subset(parameter == "pH"), y = subset(parameter == "SpC"))
synoptic_data %>%
synoptic_data %>%
pivot_wider(names_from = "parameter") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
!is.na() %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
!is.na(result_value) %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
!is.na(result_value) %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
# Step 2. Load Synoptic Data, if desired ----------------------------------------------------
synoptic_data <- read.csv("processed/SYNOPTIC_2023-06-23.csv")
synoptic_data %>%
!is.na(result_value) %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
View(synoptic_data)
synoptic_data %>%
is.na(result_value) %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value")
wide <- synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value")
View(wide)
#Load libraries and set directory
setwd("~/Documents/GitHub/Wade-Theme-1")
#load packages
source("code/0-packages.R")
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data <- sampling_data %>%
mutate(sample_date = lubridate::mdy(sample_date),
sample_time = lubridate::hm(sample_time),
Year = lubridate::year(sample_date),
DOY = lubridate::yday(sample_date))
sampling_data$DIC = sampling_data$TC - sampling_data$DOC
data_transform <- sampling_data %>%
pivot_longer(-c("site_name":"medium", "Year","DOY"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "TC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION", "METALS")))))
#Read in instrument detection limits
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(result_value < ddl, "<", "NONE"),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
View(data_LOD)
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(parameter %in% c("pH", "temp", "SpC", "depth"), "NA",
result_value < ddl, "<", "NONE"),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(parameter %in% c("pH", "temp", "SpC", "depth"), "NA",
ifelse(result_value < ddl, "<", "NONE")),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
#Read in instrument detection limits
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(parameter %in% c("pH", "temp", "SpC", "depth"), "NA",
ifelse(result_value < ddl, "<", "NONE")),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(parameter %in% c("pH", "temp", "SpC", "depth"), NA,
ifelse(result_value < ddl, "<", "NONE")),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(parameter %in% c("pH", "temp", "SpC", "depth"), "NONE",
ifelse(result_value < ddl, "<", "NONE")),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value))
#Save formatted data as a .csv
write.csv(data_LOD, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
#Load libraries and set directory
setwd("~/Documents/GitHub/Wade-Theme-1")
#load packages
source("code/0-packages.R")
# Step 2. Load Synoptic Data, if desired ----------------------------------------------------
synoptic_data <- read.csv("processed/SYNOPTIC_2023-06-23.csv")
wide <- synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
#Save formatted data as a .csv
write.csv(data_LOD, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
View(synoptic_data)
synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
wide <- synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value")
View(wide)
wide <- synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_sep = "sample_ID") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
wide <- synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_sep = "sample_id") %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
View(wide)
wide <- synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value")
View(wide)
wide <- synoptic_data %>%
pivot_wider(names_from = "site_name", values_from = "result_value")
wide <- synoptic_data %>%
pivot_wider(names_from = "sample_id", values_from = "result_value")
wide <- synoptic_data %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE)
View(wide)
wide <- synoptic_data %>%
select(-c("ddl", "constituent", "detection_FLAG")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE)
wide <- synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE)
wide <- synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "UNIT")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE)
wide <- synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE)
wide <- synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
wide <- synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
View(wide)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = SpC))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = Ca))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = Mg))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = DOC))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = DIC))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Ca,  y = Mg))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Ca,  y = Fe))
result_value = ifelse(parameter == "METALS", result_value * 1000, result_value)
result_value = ifelse(constituent == "METALS", result_value * 1000, result_value)
#Load libraries and set directory
setwd("~/Documents/GitHub/Wade-Theme-1")
#load packages
source("code/0-packages.R")
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data <- sampling_data %>%
mutate(sample_date = lubridate::mdy(sample_date),
sample_time = lubridate::hm(sample_time),
Year = lubridate::year(sample_date),
DOY = lubridate::yday(sample_date))
sampling_data$DIC = sampling_data$TC - sampling_data$DOC
data_transform <- sampling_data %>%
pivot_longer(-c("site_name":"medium", "Year","DOY"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "TC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION", "METALS")))))
#Read in instrument detection limits
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(parameter %in% c("pH", "temp", "SpC", "depth"), "NONE",
ifelse(result_value < ddl, "<", "NONE")),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value),
result_value = ifelse(constituent == "METALS", result_value * 1000, result_value))
View(data_LOD)
#Save formatted data as a .csv
write.csv(data_LOD, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
# Step 2. Load Synoptic Data, if desired ----------------------------------------------------
synoptic_data <- read.csv("processed/SYNOPTIC_2023-06-23.csv")
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Ca,  y = Fe))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = Fe))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = pH,  y = Fe, fill = site_name), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = SpC,  y = Fe, fill = site_name), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = SpC,  y = Fe), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = SpC,  y = Ba), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Fe,  y = Ba), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Fe,  y = DOC), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Fe,  y = DIC), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Fe,  y = TC), shape = 21)
View(synoptic_data)
#Load libraries and set directory
setwd("~/Documents/GitHub/Wade-Theme-1")
#load packages
source("code/0-packages.R")
sampling_data = read.csv("raw/WaDE SYNOPTIC_2023-06-23.csv")
sampling_data <- sampling_data %>%
mutate(sample_date = lubridate::mdy(sample_date),
sample_time = lubridate::hm(sample_time),
Year = lubridate::year(sample_date),
DOY = lubridate::yday(sample_date))
sampling_data$DIC = sampling_data$TC - sampling_data$DOC
data_transform <- sampling_data %>%
pivot_longer(-c("site_name":"medium", "Year","DOY"), values_to = "result_value", names_to = "parameter") %>%
mutate(unit = ifelse(parameter == "depth", "CM",
ifelse(parameter == "temp", "C",
ifelse(parameter == "pH", "UNITS",
ifelse(parameter == "SpC", "uS/CM", "MG/L")))),
constituent = ifelse(parameter == "depth", "PHYS",
ifelse(parameter %in% c("pH", "SpC", "temp"), "CHEM",
ifelse(parameter %in% c("DOC", "TC", "DIC"), "C",
ifelse(parameter %in% c("SO4", "Cl", "NO3", "PO4"), "ANION", "METALS")))))
#Read in instrument detection limits
WaDE_ddl = read.csv("raw/WaDE DETECTION LIMITS.csv")
#Merge ddls with analytical results and determine if flagged
data_LOD <- left_join(data_transform, WaDE_ddl, by = "parameter") %>%
mutate(detection_FLAG = ifelse(parameter %in% c("pH", "temp", "SpC", "depth"), "NONE",
ifelse(result_value < ddl, "<", "NONE")),
result_value = ifelse(detection_FLAG == "<", ddl/2, result_value),
result_value = ifelse(constituent == "METALS", result_value * 1000, result_value)) #Adjust units for metals to MG/L
#Save formatted data as a .csv
write.csv(data_LOD, "processed/SYNOPTIC_2023-06-23.csv", row.names = FALSE)
# Step 2. Load Synoptic Data, if desired ----------------------------------------------------
synoptic_data <- read.csv("processed/SYNOPTIC_2023-06-23.csv")
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Fe,  y = TC), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Fe,  y = DIC), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = DOC,  y = DIC), shape = 21)
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = DOC,  y = DIC))
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = DOC,  y = DIC)) +
theme_mb1()
synoptic_data %>%
dplyr::select(-c("ddl", "constituent", "detection_FLAG", "unit")) %>%
pivot_wider(names_from = "parameter", values_from = "result_value", names_expand = TRUE) %>%
ggplot() +
geom_point(aes(x = Ca,  y = Mg)) +
theme_mb1()
